// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleHealthyRecipes.Data;

#nullable disable

namespace SimpleHealthyRecipes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250306220129_ChangeIngridiendModel")]
    partial class ChangeIngridiendModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RecipeModelTagModel", b =>
                {
                    b.Property<int>("RecipesId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("RecipesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RecipeModelTagModel");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Drinks"
                        });
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.CuisineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "French"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(2024, 2, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mexican"
                        });
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.IngredientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CaloriesPer100g")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CarbohydratesPer100g")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FatPer100g")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<decimal>("ProteinPer100g")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.MovieReferenceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MovieReferences");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RatingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeIngredientModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IngredientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("Unit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CookTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CuisineId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MovieReferenceId")
                        .HasColumnType("integer");

                    b.Property<int>("PrepTimeMinutes")
                        .HasColumnType("integer");

                    b.Property<int>("Servings")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CuisineId");

                    b.HasIndex("MovieReferenceId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeStepModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("StepNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.TagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RecipeModelTagModel", b =>
                {
                    b.HasOne("SimpleHealthyRecipes.Models.RecipeModel", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleHealthyRecipes.Models.TagModel", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RatingModel", b =>
                {
                    b.HasOne("SimpleHealthyRecipes.Models.RecipeModel", "Recipe")
                        .WithMany("Ratings")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeIngredientModel", b =>
                {
                    b.HasOne("SimpleHealthyRecipes.Models.IngredientModel", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleHealthyRecipes.Models.RecipeModel", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeModel", b =>
                {
                    b.HasOne("SimpleHealthyRecipes.Models.CategoryModel", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SimpleHealthyRecipes.Models.CuisineModel", "Cuisine")
                        .WithMany("Recipes")
                        .HasForeignKey("CuisineId");

                    b.HasOne("SimpleHealthyRecipes.Models.MovieReferenceModel", "MovieReference")
                        .WithMany("Recipes")
                        .HasForeignKey("MovieReferenceId");

                    b.Navigation("Category");

                    b.Navigation("Cuisine");

                    b.Navigation("MovieReference");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeStepModel", b =>
                {
                    b.HasOne("SimpleHealthyRecipes.Models.RecipeModel", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.CategoryModel", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.CuisineModel", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.IngredientModel", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.MovieReferenceModel", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("SimpleHealthyRecipes.Models.RecipeModel", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
